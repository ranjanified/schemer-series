(in-package :schemer-series/tests)

(def-suite chapter10 :in the-little-schemer)
(in-suite chapter10)

(test lookup-in-entry
  (is (equal? (let ((name 'entree)
		    (entry '((appetizer entree beverage)
			     (food tastes good)))
		    (entry-f (lambda (x) x)))
		(lookup-in-entry name entry entry-f))
	      'tastes))
  (is (equal? (let ((name 'dessert)
		    (entry '((appetizer entree beverage)
			     (food tastes good)))
		    (entry-f (lambda (x) (list x 'not 'found))))
		(lookup-in-entry name entry entry-f))
	      '(dessert not found))))

(test lookup-in-table
  (is (equal? (let ((name 'entree)
		    (table '(((entree dessert)
			      (sphagetti spumomoni))
			     ((appetizer entree beverage)
			      (food tsates good))))
		    (table-f (lambda (x) (list x 'not 'found))))
		(lookup-in-table name table table-f))
	      'sphagetti))
  (is (equal? (let ((name 'entree1)
		    (table '(((entree dessert)
			      (sphagetti spumomoni))
			     ((appetizer entree beverage)
			      (food tastes good))))
		    (table-f (lambda (x) (list x 'not 'found))))
		(lookup-in-table name table table-f))
	      '(entree1 not found))))
